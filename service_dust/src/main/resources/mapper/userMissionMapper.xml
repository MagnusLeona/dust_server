<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="per.magnus.dust.business.mapper.UserMissionMapper">
    <select id="getMissionByUserId" parameterType="long" resultMap="missionsByUserId">
            select
            wm.id, wm.name, wm.status, wm.content,wm.create_time, wm.deadline_time, wum.user_id, wum.mission_id, wum.level, wum.status as user_status
            from
            dust_mission wm join dust_user_mission wum
            on
            wm.id=wum.mission_id
            where
            wum.user_id=#{id}
            and wm.status &lt; 11
            order by wm.status asc
    </select>

    <resultMap id="missionsByUserId" type="per.magnus.dust.business.domain.Mission">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="status" column="status" />
        <result property="content" column="content"/>
        <result property="createTime" column="create_time" javaType="java.time.LocalDateTime"/>
        <result property="deadLineTime" column="deadline_time" javaType="java.time.LocalDateTime"/>
        <collection property="userList" ofType="per.magnus.dust.business.domain.UserMission">
            <result property="userLevel" column="level"/>
            <result property="userStatus" column="user_status" />
        </collection>
    </resultMap>
    
    <select id="getArchivedMissionByUserId" parameterType="per.magnus.dust.business.domain.User" resultMap="missionsByUserId">
        select
        wm.id, wm.name, wm.status, wm.content,wm.create_time, wm.deadline_time, wum.user_id, wum.mission_id, wum.level, wum.status as user_status
        from
        dust_mission wm join dust_user_mission wum
        on
        wm.id=wum.mission_id
        where
        wum.user_id=#{user.id}
        and wm.status &gt; 10
    </select>

    <insert id="insertMissionUserRelations" parameterType="per.magnus.dust.business.domain.UserMission">
        insert into dust_user_mission(mission_id, user_id, level, status) value(#{userMission.mission.id}, #{userMission.user.id}, #{userMission.userLevel}, #{userMission.userStatus})
    </insert>

    <select id="queryUserMissionRole" resultType="java.lang.Integer">
        select level from dust_user_mission where mission_id=#{missionId} and user_id=#{userId}
    </select>

    <delete id="deleteSingleUserMissionRelation">
        delete from dust_user_mission where mission_id=#{missionId} and user_id=#{userId}
    </delete>

    <delete id="deleteAllUserMissionRelations">
        delete from dust_user_mission where mission_id=#{missionId}
    </delete>

    <update id="updateUserMission">
        update dust_mission
        set
        name=#{mission.name},content=#{mission.content},create_time=#{mission.createTime},deadline_time=#{mission.deadLineTime}
        where
        id=#{mission.id}
        and exists (
        select 1 from dust_user_mission where mission_id=#{mission.id} and user_id=#{user.id}
        )
    </update>

    <update id="updateUserMissionStatus">
        update dust_user_mission set status=#{mission.status} where mission_id=#{mission.id} and user_id=#{user.id}
    </update>

    <delete id="deleteUserById">
        delete from dust_mission where mission_id=#{mission.id} and exists (select 1 from dust_user_mission where mission_id=#{mission.id} and user_id=#{user.id})
    </delete>

    <update id="updateUserMissionStatusByAuth">
        update dust_mission set status=#{status} where exists(select 1 from dust_user_mission where user_id=#{userId} and mission_id=#{missionId} and level=#{level})
    </update>

    <delete id="deleteUserMissionRelations">
        delete from dust_user_mission where mission_id={mission.id} and user_id=#{user.id}
    </delete>
</mapper>